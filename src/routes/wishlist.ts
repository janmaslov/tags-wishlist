import Elysia, { t } from "elysia";
import { addWishlistItem, renderWishlist } from "../handlers";
import { AddModal } from "../views/components/modals/AddModal";
import { ErrorModal } from "../views/components/modals/ErrorModal";
import { emitWishlistRefreshEvent } from ".";
import { OmdbResponse, WishlistItem } from "../types";

const wishlistRoutes = (app: Elysia) => app
	.group('/wishlist', (app) => app
		.get('/add', async ({ set }) => {
			set.headers['Content-Type'] = 'text/html; charset=utf8';
			return await AddModal();
		})
		.get('/add/queryposter', async ({query}: {query: Partial<WishlistItem>}) => {
			const omdbQuery = new URLSearchParams({
				apikey: '13eadd62'
			});
			if(query.name){
				omdbQuery.append('t', query.name);
			}
			if(query.year){
				omdbQuery.append('y', query.year.toString());
			}
			const info: OmdbResponse = await (await fetch(`https://www.omdbapi.com/?${omdbQuery.toString()}`, {method: 'GET', cache: 'no-cache'})).json();

			console.log(info);

			if(!!info && !('Error' in info) && (info.Poster?.length ?? 0) > 0 && info.Poster.startsWith('http')){
				return await AddModal({posterUrl: info.Poster});
			}

			return await AddModal();
		})
		.post('/add', async ({ set, body }) => {
			try{
				await addWishlistItem(body);
				emitWishlistRefreshEvent(await renderWishlist());
			}catch(e: any){
				set.headers['Content-Type'] = 'text/html; charset=utf8';
				return await ErrorModal(e.message);
			}finally{
				return '';
			}
		}, {
			body: t.Object({
				//id - generated by database
				type: t.Numeric(),
				name: t.String(),
				poster: t.String(),
				createdBy: t.String(),
				//createdAt - generated by database
				year: t.Numeric(),
				imdbId: t.Optional(t.String()),
				tmdbId: t.Optional(t.String()),
				tvdbId: t.Optional(t.String())
			})
		})
	)

export default wishlistRoutes;